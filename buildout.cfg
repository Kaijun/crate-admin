[buildout]
extensions = lovely.buildouthttp
show-picked-versions = true

parts =
    nodejs
    nodejs_bin
    npm_bin
    node_modules
    bower_modules
    bower_script
    generate_plugin
    genearte_plugin_tar

[defined-versions]
nodejs = 0.10.25

[nodejs]
recipe = hexagonit.recipe.cmmi
url = http://nodejs.org/dist/v${defined-versions:nodejs}/node-v${defined-versions:nodejs}.tar.gz
strip-top-level-dir = true
configure-options=
    --no-ssl2

[nodejs_bin]
recipe = lovely.recipe:mkfile
path = ${buildout:bin-directory}/node
mode = 0755
content =#!/bin/sh
  PATH=${nodejs:location}/bin:$PATH
  exec ${nodejs:location}/bin/node $@

[npm_bin]
recipe = lovely.recipe:mkfile
path = ${buildout:bin-directory}/npm
mode = 0755
content =#!/bin/sh
  PATH=${nodejs:location}/bin:$PATH
  exec ${nodejs:location}/bin/npm $@

[node_modules]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" ${npm_bin:path} install .; echo "\nNodeJS server side modules updated.\n"

[bower_modules]
recipe = collective.recipe.cmd
dependency = ${node_modules:recipe}
on_install = true
on_update = true
cmds = NODE_PATH=${buildout:directory}/node_modules ${bower_script:output} install; echo "\nBower client-side modules updated.\n"

[bower_script]
recipe = collective.recipe.template
dependency = ${node_modules:recipe}
input = inline:
    #!/bin/sh
    PATH=${nodejs:location}/bin:$PATH
    export NODE_PATH=${buildout:directory}/node_modules
    ${buildout:directory}/node_modules/.bin/bower $@
output = ${buildout:bin-directory}/bower
mode = 755

[generate_plugin]
recipe = collective.recipe.template
dependency = ${bower_script:recipe}
input = inline:
    #!/bin/sh
    test -d out || mkdir out
    test -d out/plugins || mkdir -p out/plugins/crate-admin
    echo performing 'bower install'...
    ${buildout:bin-directory}/bower install
    echo copying files...
    cp -r ${buildout:directory}/app ${buildout:directory}/out/plugins/crate-admin/_site
    echo your plugin is ready at ${buildout:directory}/out/plugins/crate-admin/_site/
output = ${buildout:bin-directory}/plugin
mode = 755

[genearte_plugin_tar]
recipe = collective.recipe.template
dependency = ${bower_script:recipe}
input = inline:
    #!/bin/sh
    test -d out || mkdir out
    test -d out/archive || mkdir -p out/archive; mkdir -p out/plugins/crate-admin
    echo performing 'bower install'...
    ${buildout:bin-directory}/bower install
    echo copying files...
    cp -r ${buildout:directory}/app ${buildout:directory}/out/plugins/crate-admin/_site
    echo archiving files...
    tar -zcf out/archive/crate-admin.tar.gz -C ${buildout:directory}/out/plugins/ crate-admin
    echo your archive is ready at ${buildout:directory}/out/archive/
output = ${buildout:bin-directory}/pluginTar
mode = 755
